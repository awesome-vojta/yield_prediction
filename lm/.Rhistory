filtered_nesmysl <- saga$shapes_points$points_filter(
points = shape,
field = "VRYIELDMAS",
percent = 30.0,
method = 1
)
plot(filtered_nesmysl, max.plot = 1)
filtered_nesmysl <- saga$shapes_points$points_filter(
points = shape,
field = "VRYIELDMAS",
percent = 30.0,
method = 2
)
plot(filtered_nesmysl, max.plot = 1)
filtered_nesmysl <- saga$shapes_points$points_filter(
points = shape,
field = "VRYIELDMAS",
percent = 30.0,
method = 3
)
plot(filtered_nesmysl, max.plot = 1)
filtered_nesmysl <- saga$shapes_points$points_filter(
points = shape,
field = "VRYIELDMAS",
percent = 30.0,
method = 4
)
plot(filtered_nesmysl, max.plot = 1)
library(qgisprocess)
library(sf)
library(ggplot2)
library(Rsagacmd)
#options(qgisprocess.path = "C:\\Program Files\\QGIS 3.16.11\\apps\\qgis-ltr\\bin\\qgis_process.exe")
options(qgisprocess.path = "C:\\Program Files\\QGIS 3.16.11\\bin\\qgis_process-qgis-ltr.bat")
options(Rsagacmd.path = "C:\\dev\\saga-8.0.1_x64\\saga_cmd.exe")
qgis_configure()
# this one takes pretty long
saga <- saga_gis(saga_bin = "C:\\dev\\saga-8.0.1_x64\\saga_cmd.exe")
shape <- st_read("C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\01_yield_wgs84_33n\\a_dilec.shp")
shape_df = as.data.frame(shape)
filtered_nesmysl <- saga$shapes_points$points_filter(
field = "VRYIELDMAS",
points = shape,
radius = 100,
minnum = 20,
maxnum = 250,
method = 4,
percent = 15,
)
plot(filtered_nesmysl)
plot(filtered_nesmysl$VRYIELDMAS)
plot(filtered_nesmysl, max.plot = 1)
st_write(filtered_nesmysl, "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\05_filtered_by_R\\a_dilec_filtered_nesmysl.shp")
library(qgisprocess)
library(sf)
library(ggplot2)
library(Rsagacmd)
#options(qgisprocess.path = "C:\\Program Files\\QGIS 3.16.11\\apps\\qgis-ltr\\bin\\qgis_process.exe")
options(qgisprocess.path = "C:\\Program Files\\QGIS 3.16.11\\bin\\qgis_process-qgis-ltr.bat")
options(Rsagacmd.path = "C:\\dev\\saga-8.0.1_x64\\saga_cmd.exe")
qgis_configure()
# this one takes pretty long
saga <- saga_gis(saga_bin = "C:\\dev\\saga-8.0.1_x64\\saga_cmd.exe")
shape <- st_read("C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\01_yield_wgs84_33n\\a_dilec.shp")
filtered_nesmysl <- saga$shapes_points$points_filter(
field = "VRYIELDMAS",
points = shape,
radius = 100,
minnum = 20,
maxnum = 250,
method = 4,
percent = 15,
)
plot(filtered_nesmysl, max.plot = 1)
library(qgisprocess)
library(sf)
library(ggplot2)
library(Rsagacmd)
library(raster)
options(qgisprocess.path = "C:\\Program Files\\QGIS 3.16.11\\bin\\qgis_process-qgis-ltr.bat")
options(Rsagacmd.path = "C:\\dev\\saga-8.0.1_x64\\saga_cmd.exe")
qgis_configure()
# this one takes pretty long
saga <- saga_gis(saga_bin = "C:\\dev\\saga-8.0.1_x64\\saga_cmd.exe")
qgis_algorithms()
View(qgis_algorithms())
library(rgdal)
?gdalwarp
rgdal::GDALinfo("C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\07_interpol_R\\interpol_R.shp")
qgis_run_algorithm(
"gdal:warpreproject"
)
qgis_run_algorithm(
"qgis:tininterpolation"
)
qgis_run_algorithm(
"gdal:warpreproject",
'INPUT LAYER' = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\07_interpol_R\\interpol_R.shp"
)
qgis_run_algorithm(
"gdal:warpreproject",
INPUT_LAYER = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\07_interpol_R\\interpol_R.shp",
OUTPUT_LAYER = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\08_aligned_R\\align_R.shp"
)
devtools:::install_github("gearslaboratory/gdalUtils")
library(gdalUtils)
?gdalwarp
library(gdalUtils)
unaligned_yield <- "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\08_to_align\\a_dilec_yield.tif"
reference <- "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\08_to_align\\NDVI_clip.tif"
destination <- "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\08_to_align\\out.tif"
gdalUtils::align_rasters(
unaligned = unaligned_yield,
reference = reference,
dstfile = destination
)
gdalUtils::align_rasters(
unaligned = unaligned_yield,
reference = reference,
dstfile = destination
)
View(qgis_algorithms())
# Lib setup
library(qgisprocess)
options(qgisprocess.path = "C:\\Program Files\\QGIS 3.16.11\\bin\\qgis_process-qgis-ltr.bat")
qgis_configure()
View(qgis_algorithms())
library(qgisprocess)
library(gdalUtils)
library(sf)
library(Rsagacmd)
options(qgisprocess.path = "C:\\Program Files\\QGIS 3.16.11\\bin\\qgis_process-qgis-ltr.bat")
options(Rsagacmd.path = "C:\\dev\\saga-8.0.1_x64\\saga_cmd.exe")
qgis_configure()
saga <- saga_gis(saga_bin = "C:\\dev\\saga-8.0.1_x64\\saga_cmd.exe")
##########################
#  3) raster extraction  #
##########################
res <- qgis_run_algorithm(
"native:extractbyextent",
INPUT = "./06_interpolated_by_R/a_dilec_3_98_3.shp",
EXTENT = "./01_yield_points/a_dilec.shp",
OUTPUT = "./07_extracted/a_dilec_extracted.shp"
)
res <- qgis_run_algorithm(
"qgis:tininterpolation",
INTERPOLATION_DATA = paste(path, layer_number, attribute, type, sep = "::~::"),
METHOD = 0, # 0=Linear, 1=Cubic
EXTENT = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\01_yield_wgs84_33n\\a_dsgadilec.shp",
PIXEL_SIZE = 3, # 3 meters
OUTPUT = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\07_interpol_R\\intergsadpol_R.shp"
)
##########################
#  3) raster extraction  #
##########################
res <- qgis_run_algorithm(
"native:extractbyextent",
INPUT = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\06_interpolated_by_R\\a_dilec_3_98_3.shp",
EXTENT = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\01_yield_points\\a_dilec.shp",
OUTPUT = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\07_extracted\\a_dilec_extracted.shp"
)
library(gdalUtils)
?gdal_translate
res <- qgis_run_algorithm(
"gdal:cliprasterbymasklayer",
INPUT = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\06_interpolated_by_R\\a_dilec_3_98_3.shp",
MASK = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\01_yield_points\\a_dilec.shp",
OUTPUT = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\07_extracted\\a_dilec_extracted.shp",
MULTITHREADING = TRUE,
)
res
res <- qgis_run_algorithm(
"gdal:cliprasterbymasklayer",
INPUT = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\06_interpolated_by_R\\a_dilec_3_98_3.shp",
MASK = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\01_yield_points\\a_dilec.shp",
OUTPUT = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\07_extracted\\a_dilec_extracted.shp"
)
res <- qgis_run_algorithm(
"gdal:cliprasterbymasklayer",
INPUT = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\06_interpolated_by_R\\a_dilec_3_98_3.shp",
MASK = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\01_yield_points\\a_dilec.shp",
OUTPUT = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\07_extracted\\a_dilec_extracted.tif"
)
res <- qgis_run_algorithm(
"gdal:cliprasterbymasklayer",
INPUT = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\06_interpolated_by_R\\a_dilec_3_98_3.shp",
MASK = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\01_yield_points\\a_dilec.shp",
OUTPUT = "C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\git\\07_extracted\\a_dilec_extracted.shp"
)
?foreach
#####################
#  1) point filter  #
#####################
shape <- st_read("C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\01_yield_wgs84_33n\\a_dilec.shp")
library(sf)
#####################
#  1) point filter  #
#####################
shape <- st_read("C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\01_yield_wgs84_33n\\a_dilec.shp")
#####################
#  1) point filter  #
#####################
shape <- st_read("C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\processing\\01_yield_points\\a_dilec.shp")
shape
shape["VRYIELD"]
shape["VRYIELDMAS"]
yieldpnts <- shape["VRYIELDMAS"]
yieldpnts
yieldpnts[1]
yieldpnts[[1]]
sum(is.na(yieldpnts[[1]]))
library(raster)
library(ggplot2)
#setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
yields_3_98 <- c(
raster("yields_10m_filtered\\a_dilec_3_98_3_interpolated_clip_aligned_clip.tif"),
raster("yields_10m_filtered\\a_dolni_dil_3_98_3_interpolated_clip_aligned_clip.tif"),
raster("yields_10m_filtered\\a_mrazirna_3_98_3_interpolated_clip_aligned_clip.tif"),
raster("yields_10m_filtered\\a_padelek_3_98_3_interpolated_clip_aligned_clip.tif"),
raster("yields_10m_filtered\\a_pod_vysokou_3_98_3_interpolated_clip_aligned_clip.tif"),
raster("yields_10m_filtered\\a_vysoka_3_98_3_interpolated_clip_aligned_clip.tif"),
raster("yields_10m_filtered\\a_za_jamou_3_98_3_interpolated_clip_aligned_clip.tif"),
raster("yields_10m_filtered\\s_1_3_98_3_interpolated_clip_aligned_clip.tif"),
raster("yields_10m_filtered\\s_3_3_98_3_interpolated_clip_aligned_clip.tif"),
raster("yields_10m_filtered\\s_4_3_98_3_interpolated_clip_aligned_clip.tif")
)
yields_10_90 <- c(
raster("yields_10m_filtered_10-90\\a_dilec_10_90_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_10-90\\a_dolni_dil_10_90_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_10-90\\a_mrazirna_10_90_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_10-90\\a_padelek_10_90_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_10-90\\a_pod_vysokou_10_90_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_10-90\\a_vysoka_10_90_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_10-90\\a_za_jamou_10_90_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_10-90\\s_1_10_90_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_10-90\\s_3_10_90_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_10-90\\s_4_10_90_3_interpolated_aligned_clip.tif")
)
ndvis <- c(
raster("indices_10m\\a_dilec_poly_NDVI.tif"),
raster("indices_10m\\a_dolni_dil_poly_NDVI.tif"),
raster("indices_10m\\a_mrazirna_poly_NDVI.tif"),
raster("indices_10m\\a_padelek_poly_NDVI.tif"),
raster("indices_10m\\a_pod_vysokou_poly_NDVI.tif"),
raster("indices_10m\\a_vysoka_poly_NDVI.tif"),
raster("indices_10m\\a_za_jamou_poly_NDVI.tif"),
raster("indices_10m\\s_1_poly_NDVI.tif"),
raster("indices_10m\\s_3_poly_NDVI.tif"),
raster("indices_10m\\s_4_poly_NDVI.tif")
)
evis <- c(
raster("indices_10m\\a_dilec_poly_EVI.tif"),
raster("indices_10m\\a_dolni_dil_poly_EVI.tif"),
raster("indices_10m\\a_mrazirna_poly_EVI.tif"),
raster("indices_10m\\a_padelek_poly_EVI.tif"),
raster("indices_10m\\a_pod_vysokou_poly_EVI.tif"),
raster("indices_10m\\a_vysoka_poly_EVI.tif"),
raster("indices_10m\\a_za_jamou_poly_EVI.tif"),
raster("indices_10m\\s_1_poly_EVI.tif"),
raster("indices_10m\\s_3_poly_EVI.tif"),
raster("indices_10m\\s_4_poly_EVI.tif")
)
lm_foo <- function(yield_raster, index_raster) {
i_df <- as.data.frame(index_raster, xy = TRUE)
i_name <- ""
if(grepl("NDVI", colnames(i_df)[3], T)) {
i_name <- "NDVI"
} else {
i_name <- "EVI"
}
colnames(i_df) <- c("x","y",i_name)
y_df <- as.data.frame(yield_raster, xy = TRUE)
y_df[4] <- y_df[3] * 10 # ton -> quintal conversion
colnames(y_df) <- c("x","y","t/ha","Qx/ha")
y_values <- unlist(y_df[4])
i_values <- unlist(i_df[3])
yi_df <- data.frame(y_values, i_values)
#plot(
#  y_values ~ i_values,
#  ylab = "Qx/ha",
#  xlab = i_name
#)
res <- summary(
lm(
formula = i_values ~ y_values,
data = yi_df
)
)
print(res$r.squared)
}
for (i in seq_along(yields_10_90)) {
lm_foo(yields[[i]],evis[[i]])
}
for (i in seq_along(yields_10_90)) {
lm_foo(yields_10_90[[i]],evis[[i]])
}
for (i in seq_along(yields_10_90)) {
lm_foo(yields_10_90[[i]],ndvis[[i]])
}
#for (i in seq_along(yields_10_90)) {
lm_foo(yields_10_90[[1]],ndvis[[1]])
lm_foo <- function(yield_raster, index_raster) {
i_df <- as.data.frame(index_raster, xy = TRUE)
i_name <- ""
if(grepl("NDVI", colnames(i_df)[3], T)) {
i_name <- "NDVI"
} else {
i_name <- "EVI"
}
colnames(i_df) <- c("x","y",i_name)
y_df <- as.data.frame(yield_raster, xy = TRUE)
y_df[4] <- y_df[3] * 10 # ton -> quintal conversion
colnames(y_df) <- c("x","y","t/ha","Qx/ha")
y_values <- unlist(y_df[4])
i_values <- unlist(i_df[3])
yi_df <- data.frame(y_values, i_values)
plot(
y_values ~ i_values,
ylab = "Qx/ha",
xlab = i_name
)
abline(
lm(
formula = y_values ~ i_values,
data = yi_df
),
col = "red"
)
res <- summary(
lm(
formula = i_values ~ y_values,
data = yi_df
)
)
print(res$r.squared)
}
#for (i in seq_along(yields_10_90)) {
lm_foo(yields_10_90[[1]],ndvis[[1]])
#for (i in seq_along(yields_10_90)) {
lm_foo(yields_10_90[[1]],ndvis[[1]])
lm_foo(yields_10_90[[2]],ndvis[[2]])
lm_foo(yields_10_90[[3]],ndvis[[3]])
lm_foo(yields_10_90[[4]],ndvis[[4]])
lm_foo(yields_10_90[[5]],ndvis[[5]])
lm_foo(yields_10_90[[6]],ndvis[[6]])
lm_foo(yields_10_90[[7]],ndvis[[7]])
lm_foo(yields_10_90[[8]],ndvis[[8]])
lm_foo(yields_10_90[[10]],ndvis[[10]])
lm_foo(yields_10_90[[1]],evis[[1]])
lm_foo(yields_10_90[[2]],evis[[2]])
lm_foo(yields_10_90[[2]],evis[[2]])
lm_foo(yields_10_90[[1]],evis[[1]])
library(sf)
library(Rsagacmd)
library(qgisprocess)
options(qgisprocess.path = "C:\\Program Files\\QGIS 3.16.11\\bin\\qgis_process-qgis-ltr.bat")
options(Rsagacmd.path = "C:\\dev\\saga-8.0.1_x64\\saga_cmd.exe")
qgis_configure()
saga <- saga_gis(saga_bin = "C:\\dev\\saga-8.0.1_x64\\saga_cmd.exe")
#setwd(getSrcDirectory()[1])
setwd("C:\Users\vojte\Documents\01_VSE\00_baka\processing")
source(file = "./vars.R")
source(file = "./functions.R")
#setwd(getSrcDirectory()[1])
setwd("C:\Users\vojte\Documents\01_VSE\00_baka\processing")
#setwd(getSrcDirectory()[1])
setwd("C:\\Users\\vojte\\Documents\\01_VSE\\00_baka\\processing")
source(file = "./vars.R")
source(file = "./functions.R")
### DATA PREPARATION ###
yield_points_files <- c(
"./01_yield_points/a_dilec.shp",
"./01_yield_points/a_dolni_dil.shp",
"./01_yield_points/a_mrazirna.shp",
"./01_yield_points/a_padelek.shp",
"./01_yield_points/a_pod_vysokou.shp",
"./01_yield_points/a_vysoka.shp",
"./01_yield_points/a_za_jamou.shp",
"./01_yield_points/s_1.shp",
"./01_yield_points/s_3.shp",
"./01_yield_points/s_4.shp"
)
alpha_per_file <- c(0.03, 0.03 ,0.05,0.03,0.03,0.03,0.1,0.1,0.03,0.03)
files_and_alphas <- data.frame(layer = yield_points_files, alpha = alpha_per_file)
masks <- apply(files_and_alphas, 1, function(x) create_mask_from_points(x[1], x[2]))
# 1) filter each .shp
yield_points_files_filtered <- lapply(
yield_points_files,
filter_point_layer,
below=25, above=75
)
# 2) interpolate each .shp
yield_points_files_interpolated <- lapply(
yield_points_files_filtered,
interpolate_point_layer,
pixel_size=3
)
# 3) convert interpolated onto 10m
# use the big indices
# big indices -> big overall pic
aligned <- lapply(
yield_points_files_interpolated, align_layer
)
# 4) cut interpolated 10m layers
df_to_clip <- data.frame(layer = unlist(aligned), mask = masks)
interpolated_clipped <- apply(
df_to_clip,
1,
function(x) clip_interpolated(x[1], x[2])
)
library(raster)
library(ggplot2)
#setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
yields_25_75 <- c(
raster("yields_10m_filtered_25-75\\a_dilec_25_75_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_25-75\\a_dolni_dil_25_75_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_25-75\\a_mrazirna_25_75_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_25-75\\a_padelek_25_75_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_25-75\\a_pod_vysokou_25_75_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_25-75\\a_vysoka_25_75_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_25-75\\a_za_jamou_25_75_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_25-75\\s_1_25_75_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_25-75\\s_3_25_75_3_interpolated_aligned_clip.tif"),
raster("yields_10m_filtered_25-75\\s_4_25_75_3_interpolated_aligned_clip.tif")
)
ndvis <- c(
raster("indices_10m\\a_dilec_poly_NDVI.tif"),
raster("indices_10m\\a_dolni_dil_poly_NDVI.tif"),
raster("indices_10m\\a_mrazirna_poly_NDVI.tif"),
raster("indices_10m\\a_padelek_poly_NDVI.tif"),
raster("indices_10m\\a_pod_vysokou_poly_NDVI.tif"),
raster("indices_10m\\a_vysoka_poly_NDVI.tif"),
raster("indices_10m\\a_za_jamou_poly_NDVI.tif"),
raster("indices_10m\\s_1_poly_NDVI.tif"),
raster("indices_10m\\s_3_poly_NDVI.tif"),
raster("indices_10m\\s_4_poly_NDVI.tif")
)
evis <- c(
raster("indices_10m\\a_dilec_poly_EVI.tif"),
raster("indices_10m\\a_dolni_dil_poly_EVI.tif"),
raster("indices_10m\\a_mrazirna_poly_EVI.tif"),
raster("indices_10m\\a_padelek_poly_EVI.tif"),
raster("indices_10m\\a_pod_vysokou_poly_EVI.tif"),
raster("indices_10m\\a_vysoka_poly_EVI.tif"),
raster("indices_10m\\a_za_jamou_poly_EVI.tif"),
raster("indices_10m\\s_1_poly_EVI.tif"),
raster("indices_10m\\s_3_poly_EVI.tif"),
raster("indices_10m\\s_4_poly_EVI.tif")
)
lm_foo <- function(yield_raster, index_raster) {
i_df <- as.data.frame(index_raster, xy = TRUE)
i_name <- ""
if(grepl("NDVI", colnames(i_df)[3], T)) {
i_name <- "NDVI"
} else {
i_name <- "EVI"
}
colnames(i_df) <- c("x","y",i_name)
y_df <- as.data.frame(yield_raster, xy = TRUE)
y_df[4] <- y_df[3] * 10 # ton -> quintal conversion
colnames(y_df) <- c("x","y","t/ha","Qx/ha")
y_values <- unlist(y_df[4])
i_values <- unlist(i_df[3])
yi_df <- data.frame(y_values, i_values)
plot(
y_values ~ i_values,
ylab = "Qx/ha",
xlab = i_name
)
abline(
lm(
formula = y_values ~ i_values,
data = yi_df
),
col = "red"
)
res <- summary(
lm(
formula = i_values ~ y_values,
data = yi_df
)
)
print(res$r.squared)
}
#for (i in seq_along(yields_10_90)) {
lm_foo(yields_25_75[[1]],ndvis[[1]])
lm_foo(yields_25_75[[2]],ndvis[[2]])
lm_foo(yields_25_75[[3]],ndvis[[3]])
lm_foo(yields_25_75[[4]],ndvis[[4]])
lm_foo(yields_25_75[[5]],ndvis[[5]])
lm_foo(yields_25_75[[6]],ndvis[[6]])
lm_foo(yields_25_75[[7]],ndvis[[7]])
lm_foo(yields_25_75[[8]],ndvis[[8]])
lm_foo(yields_25_75[[9]],ndvis[[9]])
lm_foo(yields_25_75[[10]],ndvis[[10]])
lm_foo(yields_25_75[[1]],evis[[1]])
lm_foo(yields_25_75[[2]],evis[[2]])
lm_foo(yields_25_75[[1]],evis[[1]])
lm_foo(yields_25_75[[1]],evis[[1]])
lm_foo(yields_25_75[[10]],ndvis[[10]])
lm_foo(yields_25_75[[1]],evis[[1]])
lm_foo(yields_25_75[[2]],evis[[2]])
lm_foo(yields_25_75[[3]],evis[[3]])
lm_foo(yields_25_75[[4]],evis[[4]])
lm_foo(yields_25_75[[5]],evis[[5]])
lm_foo(yields_25_75[[6]],evis[[6]])
lm_foo(yields_25_75[[7]],evis[[7]])
lm_foo(yields_25_75[[8]],evis[[8]])
lm_foo(yields_25_75[[9]],evis[[9]])
lm_foo(yields_25_75[[10]],evis[[10]])
